apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  name: {{ include "lighthouse.fullname" . }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "lighthouse.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "lighthouse.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      hostNetwork: false
      #dnsPolicy: "None"
      #dnsConfig:
      #  nameservers:
      #  - 169.254.25.10
      initContainers:
        - name: init-publicip
          image: alpine
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          command:
            - sh
            - -c
            - >
              wget -T 2 http://ifconfig.me -q -O - > /shared/pubip;
              echo 'public ip initialization done';
          volumeMounts:
            - name: shared-data
              mountPath: /shared
      containers:
        - args:
            - |
              publicip=$(cat /shared/pubip)
              lighthouse beacon_node --network $BLOCKCHAIN --checkpoint-sync-url $SYNC_RPC --discovery-port $P2P_PORT --port $P2P_PORT --datadir /home/.eth2/beaconchaindata --http-address 0.0.0.0 --http --enr-address $publicip --enr-udp-port $P2P_PORT --target-peers 50 --metrics --metrics-address 0.0.0.0 --debug-level $LOG_LEVEL --metrics-allow-origin "*" --execution-endpoint {{ .Values.rpcHost }} --execution-jwt="/secret/jwtsecret" --disable-enr-auto-update
          command:
            - /bin/bash
            - -c
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "lighthouse.fullname" $ }}-jwt
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
            - name: LOG_LEVEL
              value: info
            - name: BLOCKCHAIN
              value: "{{ .Values.blockChain }}"
            - name: P2P_PORT
              value: "{{ .Values.p2p_port }}"
            - name: SYNC_RPC
              value: "{{ .Values.syncrpc }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ include "lighthouse.fullname" . }}
          ports:
            - containerPort: {{ .Values.p2p_port }}
            - containerPort: {{ .Values.p2p_port }}
              protocol: UDP
            - containerPort: 5052
            - containerPort: 5054
          resources: {}
          volumeMounts:
            - name: shared-data
              mountPath: /shared
            - mountPath: /secret
              name: jwtsecret
              readOnly: true
            - mountPath: /home/.eth2/beaconchaindata
              name: {{ include "lighthouse.fullname" . }}-data
      hostname: node
      restartPolicy: Always
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      volumes:
        - name: shared-data
          emptyDir: {}
        - name: jwtsecret
          secret:
            secretName: {{ include "lighthouse.fullname" . }}-jwt
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: {{ include "lighthouse.fullname" . }}-data
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: {{ include "lighthouse.fullname" . }}-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
        - name: {{ include "lighthouse.fullname" . }}-data
          persistentVolumeClaim:
            claimName: {{ include "lighthouse.fullname" . }}-data
  {{- end }}
status: {}
